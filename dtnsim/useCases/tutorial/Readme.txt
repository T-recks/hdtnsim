This document is aimed at explaining a series of examples which 
instantiate different functionalities of the Dtnsim simulator. 
(https://bitbucket.org/lcd-unc-ar/dtnsim)

The example1 is a "hello world" scenario that make use of the basic functionalities
of the simulator. It instantiates a DTN network with two nodes in a full-duplex communication.
It is possible to choose between two possible configurations (Configs):
[Config example1a]: instantiates one traffic generator in node 1 which produces bundles destined for node2.
In order to route data to destination, the nodes instantiate a routing algorithm called "direct" which will
deliver bundles only when a direct contact with the destination is available. 
[Config example2a]: is the same as example1a but with a second traffic generator in node 2 which produces bundles destined for node1.

The example2 simulates a network with 4 nodes and a few contacts among them.
Its purpose is to show how to use different routing algorithms in the same scenario.
This example containts one traffic generator from node 1 to 4 and three possible configurations:
[Config example2a]: uses a direct routing algorithm
[Config example2b]: uses a cgrModel350 routing algorithm
[Config example2c]: uses a cgrIon350 routing algorithm
It can be seen (both in the graphical interface and in the result statistic files) that
more bundles are delivered to their destination with the last two schemes.
Furthermore, it is possible to see the traffic flow and the topology of the network 
as output pdf files generated by the simulator.

The example3 is the same as example2 with one difference:
Instead of creating one different configuration for each routing 
algorithm, it defines a variable (${routing="direct","cgrModel350","cgrIon350"}) which
can be used to specify the routing algorithm. Also, the possible runs
to be executed can be seen by running the following command in a console:
"../../src/dtnsim example3.ini -u Cmdenv -x example3 -g" 

Finally, example4 is a more complex case where 5 nodes are instantiated.
This example shows that, when using the routing algorithm cgrModelRev17,
additional parameters of the routing algorithm can be defined through 
the variable "routingType". Furthermore, different traffics can be generated
by choosing among different runs.
It can be observed here, that the network performance is highly dependant on the
chosen routing strategy.


